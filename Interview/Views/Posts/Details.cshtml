@model Interview.ViewModels.PostAnswerViewModel
@{
    ViewBag.Title = "Details";
    var postContent = Model.PostContent;
}

<div class="container">
    <div class="row">
        <div class="col-sm-1">
            <br />
            <div>
                @Ajax.ActionLink(" ", "ProcessPostVote", "Posts", new { voteStatus = 1, postId = Model.PostID },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "vote-point",
                 InsertionMode = InsertionMode.Replace,
                 OnSuccess = "changeArrowColor('" + "Post-" + Model.PostID + "', '" + 1 + "')"
             }, new
             {
                 id = "Post-" + Model.PostID + "-up",
                 @class = "vote-link glyphicon glyphicon-triangle-top",
                 @style = "text-decoration: none; color: " + Model.UpArrowColor,
                 @type = "button"
             })
            </div>
            <div>
                <h5 id="vote-point">&nbsp;@Model.CurrentVote</h5>
            </div>
            <div>
                @Ajax.ActionLink(" ", "ProcessPostVote", "Posts", new { voteStatus = -1, postId = Model.PostID },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "vote-point",
                 InsertionMode = InsertionMode.Replace,
                 OnSuccess = "changeArrowColor('" + "Post-" + Model.PostID + "', '" + -1 + "')"
             }, new
             {
                 id = "Post-" + Model.PostID + "-down",
                 @class = "vote-link glyphicon glyphicon-triangle-bottom",
                 @style = "text-decoration: none; color: " + Model.DownArrowColor,
                 @type = "button"
             })
            </div>
        </div>
        <div class="col-sm-8">
            <div>
                <h4>@Html.DisplayFor(model => model.PostTitle)</h4>
                <p>@Html.Raw(postContent)</p>
                <div class="post-info">
                    <p class="post-createdat">Posted on @Html.DisplayFor(model => model.CreatedAt)</p>
                    <p class="post-username">
                        By <a href="@Url.Action("Profile", "Users", new { username= Model.User.UserName})">
                            @Html.DisplayFor(m => m.User.UserName)
                        </a>
                    </p>
                </div>
                <div class="clearfix"></div>
                <hr />
            </div>
            <div id="answers">
                <div id="answers-content">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="row">
                            <div class="col-sm-1">
                                <br />
                                <div>
                                    @Ajax.ActionLink(" ", "ProcessCommentVote", "Comments", new { voteStatus = 1, commentId = comment.CommentID },
                                     new AjaxOptions
                                     {
                                         HttpMethod = "GET",
                                         UpdateTargetId = "comment-vote-point-" + comment.CommentID,
                                         InsertionMode = InsertionMode.Replace,
                                         OnSuccess = "changeArrowColor('" + "Comment-" + comment.CommentID + "', '" + 1 + "')"
                                     }, new
                                     {
                                         id = "Comment-" + comment.CommentID + "-up",
                                         @class = "vote-link glyphicon glyphicon-triangle-top",
                                         @style = "text-decoration: none; color: " + comment.UpArrowColor,
                                         @type = "button"
                                     })
                                </div>
                                <div>
                                    <h5 id="comment-vote-point-@comment.CommentID">&nbsp;@comment.CurrentVote</h5>
                                </div>
                                <div>
                                    @Ajax.ActionLink(" ", "ProcessCommentVote", "Comments", new { voteStatus = -1, commentId = comment.CommentID },
                                     new AjaxOptions
                                     {
                                         HttpMethod = "GET",
                                         UpdateTargetId = "comment-vote-point-" + comment.CommentID,
                                         InsertionMode = InsertionMode.Replace,
                                         OnSuccess = "changeArrowColor('" + "Comment-" + comment.CommentID + "', '" + -1 + "')"
                                     }, new
                                     {
                                         id = "Comment-" + comment.CommentID + "-down",
                                         @class = "vote-link glyphicon glyphicon-triangle-bottom",
                                         @style = "text-decoration: none; color: " + comment.DownArrowColor,
                                         @type = "button"
                                     })
                                </div>
                            </div>
                            <div class="col-sm-11">
                                <div>
                                    <p>@Html.Raw(comment.CommentContent)</p>
                                    <div class="post-info">
                                        <p class="post-createdat">Commented on @comment.CreatedAt</p>
                                        <p class="post-username">
                                            By <a href="@Url.Action("Profile", "Users", new { username=@comment.User.UserName})">
                                                @comment.User.UserName
                                            </a>
                                        </p>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                @if (ViewBag.userId == comment.UserID)
                                {
                                    <div>
                                        <text>
                                            @Html.ActionLink("Edit", "Edit", "Comments", new { id = comment.CommentID }, null) |
                                            @Html.ActionLink("Delete", "Delete", "Comments", new { id = comment.CommentID }, null)
                                        </text>
                                    </div>
                                }
                            </div>
                            <hr />
                        </div>

                    }
                </div>
                <div #id="answers-form">
                    @using (Html.BeginForm("AddComment", "Comments", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-sm-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.CommentContent, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CommentContent, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.HiddenFor(model => model.PostID)
                            <div class="form-group">
                                <div class="col-sm-offset-1 col-sm-8">
                                    <input type="submit" value="Post" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <p>
                    @if (ViewBag.userId == Model.User.Id)
                    {
                        <text>@Html.ActionLink("Edit", "Edit", new { id = Model.PostID }) |</text>
                    }
                    @Html.ActionLink("Back to List", "Index")
                </p>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="row">
                <h6>Lastest Posts</h6>
                <hr />
                @Html.Action("LatestPosts", "Posts")
            </div>

            <div class="row">
                <h6>Most Popular Tags</h6>
                <hr />
                @Html.Action("TopTags", "Posts")
            </div>
        </div>
    </div>
</div>
    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customjs")
    <script>

        CKEDITOR.replace("CommentContent");
        $(function () {

            @if (!User.Identity.IsAuthenticated)
            {
                @: $(".vote-link").bind("click", false).css("cursor", "default");
            }
        });

        function changeArrowColor(arrowIdSubString, voteStatus) {
            var upArrowId = "#" + arrowIdSubString + "-up";
            var downArrowId = "#" + arrowIdSubString + "-down"
            var notHightLighted = "rgb(0, 0, 0)";
            var hightLighted = "rgb(250, 128, 114)";
            var upColor = $(upArrowId).css("color");
            var downColor = $(downArrowId).css("color");
            if (voteStatus == 1) {
                if (upColor == notHightLighted && downColor == notHightLighted) {
                    $(upArrowId).css("color", hightLighted);
                } else if (upColor == notHightLighted && downColor == hightLighted) {
                    $(upArrowId).css("color", hightLighted);
                    $(downArrowId).css("color", notHightLighted);
                } else if (upColor == hightLighted && downColor == notHightLighted) {
                    $(upArrowId).css("color", notHightLighted);
                }
            } else {
                if (downColor == notHightLighted && upColor == notHightLighted) {
                    $(downArrowId).css("color", hightLighted);
                } else if (downColor == notHightLighted && upColor == hightLighted) {
                    $(downArrowId).css("color", hightLighted);
                    $(upArrowId).css("color", notHightLighted);
                } else if (downColor == hightLighted && upColor == notHightLighted) {
                    $(downArrowId).css("color", notHightLighted);
                }
            }
        }
    </script>
}


